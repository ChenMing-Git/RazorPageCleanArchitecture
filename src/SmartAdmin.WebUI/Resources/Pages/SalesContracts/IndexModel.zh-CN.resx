<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Are you sure delete checked rows?" xml:space="preserve">
    <value>您确定删除选中的行吗？</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>未付款金额</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="Closed Date" xml:space="preserve">
    <value>关闭日期</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>命令</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="Contract Amount" xml:space="preserve">
    <value>合同金额</value>
  </data>
  <data name="Contract Date" xml:space="preserve">
    <value>合同日期</value>
  </data>
  <data name="Contract No" xml:space="preserve">
    <value>合同号</value>
  </data>
  <data name="Customer Name" xml:space="preserve">
    <value>供应商名称</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Delete ${checkedId.length} Success" xml:space="preserve">
    <value>删除 ${checkedId.length} 成功</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="Download Template" xml:space="preserve">
    <value>下载模板</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="Export Excel" xml:space="preserve">
    <value>导出 Excel</value>
  </data>
  <data name="Export Success" xml:space="preserve">
    <value>导出成功</value>
  </data>
  <data name="Import Excel" xml:space="preserve">
    <value>导入 Excel</value>
  </data>
  <data name="Invoice Amount" xml:space="preserve">
    <value>发票金额</value>
  </data>
  <data name="Order No" xml:space="preserve">
    <value>订单号</value>
  </data>
  <data name="Paid Amount" xml:space="preserve">
    <value>已支付金额</value>
  </data>
  <data name="Please upload a file" xml:space="preserve">
    <value>请上传文件</value>
  </data>
  <data name="Project Name" xml:space="preserve">
    <value>项目名</value>
  </data>
  <data name="Purchase Contracts" xml:space="preserve">
    <value>采购合同信息</value>
  </data>
  <data name="PurchaseContracts" xml:space="preserve">
    <value>采购合同信息</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Save Success" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="See all available options" xml:space="preserve">
    <value>查看所有可用选项</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Contract Terms" xml:space="preserve">
    <value>付款条款</value>
  </data>
  <data name="Add Terms" xml:space="preserve">
    <value>新增条款</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>付款条款</value>
  </data>
  <data name="Ratio" xml:space="preserve">
    <value>收款款比率</value>
  </data>
  <data name="Ratio Amount" xml:space="preserve">
    <value>应收金额</value>
  </data>
  <data name="Planed Paid Date" xml:space="preserve">
    <value>计划付款日期</value>
  </data>
  <data name="Paid Ratio" xml:space="preserve">
    <value>实际支付比率</value>
  </data>
  <data name="Invoice No" xml:space="preserve">
    <value>发票号码</value>
  </data>
  <data name="Invoice Date" xml:space="preserve">
    <value>开票日期</value>
  </data>
  <data name="Tax Rate" xml:space="preserve">
    <value>税率</value>
  </data>
  <data name="Is Special" xml:space="preserve">
    <value>是否专票</value>
  </data>
  <data name="Paid Date" xml:space="preserve">
    <value>实际付款日期</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>导入</value>
  </data>
  <data name="Sales Contracts" xml:space="preserve">
    <value>销售合同</value>
  </data>
  <data name="Receipt Date" xml:space="preserve">
    <value>实际收款日期</value>
  </data>
  <data name="Receipt Ratio" xml:space="preserve">
    <value>实际收款比率</value>
  </data>
  <data name="Receipt Amount" xml:space="preserve">
    <value>已收款</value>
  </data>
  <data name="Planed Receipt Date" xml:space="preserve">
    <value>计划收款日期</value>
  </data>
</root>